# .github/workflows/setup-infrastructure.yml
name: Setup Infrastructure with Ansible

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'ansible/**'
      - '.github/workflows/infra-ansible.yml'

jobs:
  setup-infrastructure:
    name: Setup Server Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible boto3 botocore

      - name: Setup SSH Key and Config
        shell: bash
        run: |
          set -euo pipefail
          
          # Create SSH directory
          export SSH_DIR="${HOME}/.ssh"
          mkdir -p "$SSH_DIR"
          chmod 700 "$SSH_DIR"
          
          # Verify SSH private key secret exists
          if [[ -z "${{ secrets.SSH_PRIVATE_KEY }}" ]]; then
            echo "❌ SSH_PRIVATE_KEY secret is not set!"
            exit 1
          fi
          
          # Write SSH private key
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > "$SSH_DIR/vprofile-prod.pem"
          chmod 600 "$SSH_DIR/vprofile-prod.pem"
          
          # Updated server IPs (from your error log)
          SERVERS=(13.51.166.62 13.62.76.96 51.20.54.156)
          
          # Create SSH config to disable host key checking
          cat > "$SSH_DIR/config" << EOF
          Host *
              StrictHostKeyChecking no
              UserKnownHostsFile /dev/null
              LogLevel ERROR
              IdentitiesOnly yes
          
          Host 13.51.166.62
              User ubuntu
              IdentityFile $SSH_DIR/vprofile-prod.pem
              
          Host 13.62.76.96
              User ubuntu  
              IdentityFile $SSH_DIR/vprofile-prod.pem
              
          Host 51.20.54.156
              User ubuntu
              IdentityFile $SSH_DIR/vprofile-prod.pem
          EOF
          chmod 600 "$SSH_DIR/config"
          
          # Test SSH connectivity to each server
          echo "🔍 Testing SSH connectivity..."
          for server in "${SERVERS[@]}"; do
            echo "Testing connection to $server..."
            if timeout 10 ssh -o ConnectTimeout=5 ubuntu@$server 'echo "✅ Connected to $(hostname)"' 2>/dev/null; then
              echo "✅ $server is reachable"
            else
              echo "❌ $server is not reachable - check if server is running and SSH key is correct"
            fi
          done
          
          echo "SSH_DIR=$SSH_DIR" >> "$GITHUB_ENV"

      - name: Create Ansible Configuration
        run: |
          # Create ansible.cfg to disable host key checking
          cat > ansible.cfg << EOF
          [defaults]
          host_key_checking = False
          remote_user = ubuntu
          private_key_file = ${HOME}/.ssh/vprofile-prod.pem
          timeout = 30
          gather_timeout = 30
          
          [ssh_connection]
          ssh_args = -o ControlMaster=auto -o ControlPersist=60s -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no
          pipelining = True
          EOF

      - name: Update Ansible Inventory with Current IPs
        run: |
          # Create updated inventory with your current server IPs
          mkdir -p ansible/inventory
          cat > ansible/inventory/hosts.yml << EOF
          all:
            children:
              client_servers:
                hosts:
                  client_nginx:
                    ansible_host: 13.51.166.62
                    ansible_user: ubuntu
                    ansible_ssh_private_key_file: ${HOME}/.ssh/vprofile-prod.pem
                    server_role: client-nginx
              
              api_servers:
                hosts:
                  node_mongo:
                    ansible_host: 13.62.76.96
                    ansible_user: ubuntu
                    ansible_ssh_private_key_file: ${HOME}/.ssh/vprofile-prod.pem
                    server_role: nodeapi-mongo
                    
                  java_mysql:
                    ansible_host: 51.20.54.156
                    ansible_user: ubuntu
                    ansible_ssh_private_key_file: ${HOME}/.ssh/vprofile-prod.pem
                    server_role: javaapi-mysql
          EOF

      - name: Test Ansible Connectivity
        run: |
          echo "🔍 Testing Ansible connectivity to all hosts..."
          ansible all -i ansible/inventory/hosts.yml -m ping --one-line

      - name: Run Setup Playbooks
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
          ANSIBLE_SSH_ARGS: "-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
        run: |
          echo "🚀 Starting server setup..."
          
          # Run setup for client + nginx server
          echo "📦 Setting up Client + Nginx server..."
          ansible-playbook -i ansible/inventory/hosts.yml \
            --limit client_servers \
            --private-key "${HOME}/.ssh/vprofile-prod.pem" \
            ansible/playbooks/setup-client-nginx.yml -v
          
          # Run setup for node api + mongo server  
          echo "📦 Setting up Node API + MongoDB server..."
          ansible-playbook -i ansible/inventory/hosts.yml \
            --limit node_mongo \
            --private-key "${HOME}/.ssh/vprofile-prod.pem" \
            ansible/playbooks/setup-nodeapi-mongo.yml -v
            
          # Run setup for java api + mysql server
          echo "📦 Setting up Java API + MySQL server..."
          ansible-playbook -i ansible/inventory/hosts.yml \
            --limit java_mysql \
            --private-key "${HOME}/.ssh/vprofile-prod.pem" \
            ansible/playbooks/setup-javaapi-mysql.yml -v

      - name: Verify Installation
        run: |
          echo "🔍 Verifying installations on all servers..."
          
          # Check Docker installation
          ansible all -i ansible/inventory/hosts.yml \
            --private-key "${HOME}/.ssh/vprofile-prod.pem" \
            -m shell -a "docker --version" --one-line
          
          # Check Node.js on relevant servers
          ansible client_servers,node_mongo -i ansible/inventory/hosts.yml \
            --private-key "${HOME}/.ssh/vprofile-prod.pem" \
            -m shell -a "node --version" --one-line
          
          # Check Java on Java server
          ansible java_mysql -i ansible/inventory/hosts.yml \
            --private-key "${HOME}/.ssh/vprofile-prod.pem" \
            -m shell -a "java -version" --one-line

      - name: Setup Summary
        run: |
          echo "✅ Infrastructure setup completed!"
          echo ""
          echo "📊 Server Summary:"
          echo "🖥️  Client + Nginx: 13.51.166.62"
          echo "🔗 Node API + MongoDB: 13.62.76.96" 
          echo "☕ Java API + MySQL: 51.20.54.156"
          echo ""
          echo "🚀 Ready for application deployment with Kamal!"